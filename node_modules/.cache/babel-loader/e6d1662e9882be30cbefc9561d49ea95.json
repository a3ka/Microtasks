{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/Microtasks/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { FullInput } from \"./Components/FullInput\";\nimport { Input } from \"./Components/Input\";\nimport { Button } from \"./Components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [message, setMessage] = useState([{\n    message: 'message1'\n  }, {\n    message: 'message2'\n  }, {\n    message: 'message3'\n  }]);\n\n  const addMessage = title => {\n    let newMessage = {\n      message: title\n    };\n    setMessage([newMessage, ...message]);\n  }; // TASK 2\n\n\n  let [title, setTitle] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'App',\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"FullInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FullInput, {\n        addMessage: addMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), message.map((el, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: el.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Input+Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        name: '+',\n        callBack: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), message.map((el, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: el.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"RZV5c5O8IVFmEwyQ6S9o39RAVno=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/aka/Documents/Microtasks/src/App.tsx"],"names":["React","useState","FullInput","Input","Button","App","message","setMessage","addMessage","title","newMessage","setTitle","map","el","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,KAAR,QAAoB,oBAApB;AACA,SAAQC,MAAR,QAAqB,qBAArB;;;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACX,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CACjC;AAACK,IAAAA,OAAO,EAAE;AAAV,GADiC,EAEjC;AAACA,IAAAA,OAAO,EAAE;AAAV,GAFiC,EAGjC;AAACA,IAAAA,OAAO,EAAE;AAAV,GAHiC,CAAD,CAApC;;AAMJ,QAAME,UAAU,GAAEC,KAAD,IAAgB;AACzB,QAAIC,UAAU,GAAG;AAACJ,MAAAA,OAAO,EAAEG;AAAV,KAAjB;AACAF,IAAAA,UAAU,CAAC,CAACG,UAAD,EAAa,GAAGJ,OAAhB,CAAD,CAAV;AACP,GAHD,CAPe,CAYf;;;AACI,MAAG,CAACG,KAAD,EAAQE,QAAR,IAAkBV,QAAQ,CAAC,EAAD,CAA7B;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,UAAU,EAAEO;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFJ,EAOKF,OAAO,CAACM,GAAR,CAAY,CAACC,EAAD,EAAKC,KAAL,KAAe;AACxB,4BACI;AAAA,oBAAkBD,EAAE,CAACP;AAArB,WAAUQ,KAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJA,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,GAAd;AAAmB,QAAA,QAAQ,EAAE,MAAI,CAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKR,OAAO,CAACM,GAAR,CAAY,CAACC,EAAD,EAAKC,KAAL,KAAe;AACxB,4BACI;AAAA,oBAAkBD,EAAE,CAACP;AAArB,WAAUQ,KAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA,kBADJ;AA6BH;;GA5CQT,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {FullInput} from \"./Components/FullInput\";\r\nimport {Input} from \"./Components/Input\";\r\nimport {Button} from \"./Components/Button\";\r\n\r\n\r\nexport type FilterType='All' | 'RUBLS' | 'Dollars'\r\n\r\nfunction App() {\r\n    let [message, setMessage] = useState([\r\n        {message: 'message1'},\r\n        {message: 'message2'},\r\n        {message: 'message3'},\r\n    ])\r\n\r\nconst addMessage=(title:string)=>{\r\n        let newMessage = {message: title};\r\n        setMessage([newMessage, ...message])\r\n}\r\n\r\n// TASK 2\r\n    let[title, setTitle]=useState('')\r\n    \r\n    return (\r\n        <>\r\n            <div className={'App'}>\r\n                <h1>FullInput</h1>\r\n                <FullInput addMessage={addMessage}/>\r\n                {/*<div>*/}\r\n                {/*    <input/>*/}\r\n                {/*    <button>+</button>*/}\r\n                {/*</div>*/}\r\n                {message.map((el, index) => {\r\n                    return (\r\n                        <div key={index}>{el.message}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div>\r\n                <h1>Input+Button</h1>\r\n                <Input/>\r\n                <Button name={'+'} callBack={()=>{}}/>\r\n                {message.map((el, index) => {\r\n                    return (\r\n                        <div key={index}>{el.message}</div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}