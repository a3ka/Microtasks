{"ast":null,"code":"var _jsxFileName = \"/home/aka/Documents/Microtasks/src/Components/FullInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FullInput = props => {\n  _s();\n\n  let [title, setTitle] = useState('');\n  console.log(title);\n\n  const onChangeInputHandler = event => {\n    setTitle(event.currentTarget.value);\n  };\n\n  const onClickButtonHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChangeInputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickButtonHandler,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FullInput, \"MYNoGbxGn41vHCoLeDH6SYxb4UA=\");\n\n_c = FullInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FullInput\");","map":{"version":3,"sources":["/home/aka/Documents/Microtasks/src/Components/FullInput.tsx"],"names":["React","useState","FullInput","props","title","setTitle","console","log","onChangeInputHandler","event","currentTarget","value","onClickButtonHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA2C,OAA3C;;AAMA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAA8B;AAAA;;AACnD,MAAG,CAACC,KAAD,EAAQC,QAAR,IAAkBJ,QAAQ,CAAC,EAAD,CAA7B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,QAAMI,oBAAoB,GAAEC,KAAD,IAAuC;AAC9DJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAR;AACH,GAFD;;AAIA,QAAMC,oBAAoB,GAAC,MAAI,CAE9B,CAFD;;AAIA,sBACI;AAAA,4BACI;AAAO,MAAA,QAAQ,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEI,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlBM;;GAAMV,S;;KAAAA,S","sourcesContent":["import React, {ChangeEvent, useState} from 'react';\n\ntype FullInputPropsType={\n    addMessage:()=>void\n}\n\nexport const FullInput = (props:FullInputPropsType) => {\n    let[title, setTitle]=useState('')\n    console.log(title)\n\n    const onChangeInputHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n        setTitle(event.currentTarget.value)\n    }\n\n    const onClickButtonHandler=()=>{\n\n    }\n    \n    return (\n        <div>\n            <input onChange={onChangeInputHandler}/>\n            <button onClick={onClickButtonHandler}>+</button>\n        </div>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}